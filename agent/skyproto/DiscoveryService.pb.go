// Code generated by protoc-gen-go. DO NOT EDIT.
// source: DiscoveryService.proto

package skyproto

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ApplicationInstance struct {
	ApplicationId        int32    `protobuf:"varint,1,opt,name=applicationId,proto3" json:"applicationId,omitempty"`
	AgentUUID            string   `protobuf:"bytes,2,opt,name=agentUUID,proto3" json:"agentUUID,omitempty"`
	RegisterTime         int64    `protobuf:"varint,3,opt,name=registerTime,proto3" json:"registerTime,omitempty"`
	Osinfo               *OSInfo  `protobuf:"bytes,4,opt,name=osinfo,proto3" json:"osinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplicationInstance) Reset()         { *m = ApplicationInstance{} }
func (m *ApplicationInstance) String() string { return proto.CompactTextString(m) }
func (*ApplicationInstance) ProtoMessage()    {}
func (*ApplicationInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8030dc5306f709, []int{0}
}

func (m *ApplicationInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplicationInstance.Unmarshal(m, b)
}
func (m *ApplicationInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplicationInstance.Marshal(b, m, deterministic)
}
func (m *ApplicationInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationInstance.Merge(m, src)
}
func (m *ApplicationInstance) XXX_Size() int {
	return xxx_messageInfo_ApplicationInstance.Size(m)
}
func (m *ApplicationInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationInstance.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationInstance proto.InternalMessageInfo

func (m *ApplicationInstance) GetApplicationId() int32 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *ApplicationInstance) GetAgentUUID() string {
	if m != nil {
		return m.AgentUUID
	}
	return ""
}

func (m *ApplicationInstance) GetRegisterTime() int64 {
	if m != nil {
		return m.RegisterTime
	}
	return 0
}

func (m *ApplicationInstance) GetOsinfo() *OSInfo {
	if m != nil {
		return m.Osinfo
	}
	return nil
}

type ApplicationInstanceMapping struct {
	ApplicationId         int32    `protobuf:"varint,1,opt,name=applicationId,proto3" json:"applicationId,omitempty"`
	ApplicationInstanceId int32    `protobuf:"varint,2,opt,name=applicationInstanceId,proto3" json:"applicationInstanceId,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ApplicationInstanceMapping) Reset()         { *m = ApplicationInstanceMapping{} }
func (m *ApplicationInstanceMapping) String() string { return proto.CompactTextString(m) }
func (*ApplicationInstanceMapping) ProtoMessage()    {}
func (*ApplicationInstanceMapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8030dc5306f709, []int{1}
}

func (m *ApplicationInstanceMapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplicationInstanceMapping.Unmarshal(m, b)
}
func (m *ApplicationInstanceMapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplicationInstanceMapping.Marshal(b, m, deterministic)
}
func (m *ApplicationInstanceMapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationInstanceMapping.Merge(m, src)
}
func (m *ApplicationInstanceMapping) XXX_Size() int {
	return xxx_messageInfo_ApplicationInstanceMapping.Size(m)
}
func (m *ApplicationInstanceMapping) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationInstanceMapping.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationInstanceMapping proto.InternalMessageInfo

func (m *ApplicationInstanceMapping) GetApplicationId() int32 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *ApplicationInstanceMapping) GetApplicationInstanceId() int32 {
	if m != nil {
		return m.ApplicationInstanceId
	}
	return 0
}

type ApplicationInstanceRecover struct {
	ApplicationId         int32    `protobuf:"varint,1,opt,name=applicationId,proto3" json:"applicationId,omitempty"`
	ApplicationInstanceId int32    `protobuf:"varint,2,opt,name=applicationInstanceId,proto3" json:"applicationInstanceId,omitempty"`
	RegisterTime          int64    `protobuf:"varint,3,opt,name=registerTime,proto3" json:"registerTime,omitempty"`
	Osinfo                *OSInfo  `protobuf:"bytes,4,opt,name=osinfo,proto3" json:"osinfo,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ApplicationInstanceRecover) Reset()         { *m = ApplicationInstanceRecover{} }
func (m *ApplicationInstanceRecover) String() string { return proto.CompactTextString(m) }
func (*ApplicationInstanceRecover) ProtoMessage()    {}
func (*ApplicationInstanceRecover) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8030dc5306f709, []int{2}
}

func (m *ApplicationInstanceRecover) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplicationInstanceRecover.Unmarshal(m, b)
}
func (m *ApplicationInstanceRecover) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplicationInstanceRecover.Marshal(b, m, deterministic)
}
func (m *ApplicationInstanceRecover) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationInstanceRecover.Merge(m, src)
}
func (m *ApplicationInstanceRecover) XXX_Size() int {
	return xxx_messageInfo_ApplicationInstanceRecover.Size(m)
}
func (m *ApplicationInstanceRecover) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationInstanceRecover.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationInstanceRecover proto.InternalMessageInfo

func (m *ApplicationInstanceRecover) GetApplicationId() int32 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *ApplicationInstanceRecover) GetApplicationInstanceId() int32 {
	if m != nil {
		return m.ApplicationInstanceId
	}
	return 0
}

func (m *ApplicationInstanceRecover) GetRegisterTime() int64 {
	if m != nil {
		return m.RegisterTime
	}
	return 0
}

func (m *ApplicationInstanceRecover) GetOsinfo() *OSInfo {
	if m != nil {
		return m.Osinfo
	}
	return nil
}

type ApplicationInstanceHeartbeat struct {
	ApplicationInstanceId int32    `protobuf:"varint,1,opt,name=applicationInstanceId,proto3" json:"applicationInstanceId,omitempty"`
	HeartbeatTime         int64    `protobuf:"varint,2,opt,name=heartbeatTime,proto3" json:"heartbeatTime,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ApplicationInstanceHeartbeat) Reset()         { *m = ApplicationInstanceHeartbeat{} }
func (m *ApplicationInstanceHeartbeat) String() string { return proto.CompactTextString(m) }
func (*ApplicationInstanceHeartbeat) ProtoMessage()    {}
func (*ApplicationInstanceHeartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8030dc5306f709, []int{3}
}

func (m *ApplicationInstanceHeartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplicationInstanceHeartbeat.Unmarshal(m, b)
}
func (m *ApplicationInstanceHeartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplicationInstanceHeartbeat.Marshal(b, m, deterministic)
}
func (m *ApplicationInstanceHeartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationInstanceHeartbeat.Merge(m, src)
}
func (m *ApplicationInstanceHeartbeat) XXX_Size() int {
	return xxx_messageInfo_ApplicationInstanceHeartbeat.Size(m)
}
func (m *ApplicationInstanceHeartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationInstanceHeartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationInstanceHeartbeat proto.InternalMessageInfo

func (m *ApplicationInstanceHeartbeat) GetApplicationInstanceId() int32 {
	if m != nil {
		return m.ApplicationInstanceId
	}
	return 0
}

func (m *ApplicationInstanceHeartbeat) GetHeartbeatTime() int64 {
	if m != nil {
		return m.HeartbeatTime
	}
	return 0
}

type OSInfo struct {
	OsName               string   `protobuf:"bytes,1,opt,name=osName,proto3" json:"osName,omitempty"`
	Hostname             string   `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	ProcessNo            int32    `protobuf:"varint,3,opt,name=processNo,proto3" json:"processNo,omitempty"`
	Ipv4S                []string `protobuf:"bytes,4,rep,name=ipv4s,proto3" json:"ipv4s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OSInfo) Reset()         { *m = OSInfo{} }
func (m *OSInfo) String() string { return proto.CompactTextString(m) }
func (*OSInfo) ProtoMessage()    {}
func (*OSInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8030dc5306f709, []int{4}
}

func (m *OSInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OSInfo.Unmarshal(m, b)
}
func (m *OSInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OSInfo.Marshal(b, m, deterministic)
}
func (m *OSInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OSInfo.Merge(m, src)
}
func (m *OSInfo) XXX_Size() int {
	return xxx_messageInfo_OSInfo.Size(m)
}
func (m *OSInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OSInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OSInfo proto.InternalMessageInfo

func (m *OSInfo) GetOsName() string {
	if m != nil {
		return m.OsName
	}
	return ""
}

func (m *OSInfo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *OSInfo) GetProcessNo() int32 {
	if m != nil {
		return m.ProcessNo
	}
	return 0
}

func (m *OSInfo) GetIpv4S() []string {
	if m != nil {
		return m.Ipv4S
	}
	return nil
}

type ServiceNameCollection struct {
	Elements             []*ServiceNameElement `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ServiceNameCollection) Reset()         { *m = ServiceNameCollection{} }
func (m *ServiceNameCollection) String() string { return proto.CompactTextString(m) }
func (*ServiceNameCollection) ProtoMessage()    {}
func (*ServiceNameCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8030dc5306f709, []int{5}
}

func (m *ServiceNameCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceNameCollection.Unmarshal(m, b)
}
func (m *ServiceNameCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceNameCollection.Marshal(b, m, deterministic)
}
func (m *ServiceNameCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceNameCollection.Merge(m, src)
}
func (m *ServiceNameCollection) XXX_Size() int {
	return xxx_messageInfo_ServiceNameCollection.Size(m)
}
func (m *ServiceNameCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceNameCollection.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceNameCollection proto.InternalMessageInfo

func (m *ServiceNameCollection) GetElements() []*ServiceNameElement {
	if m != nil {
		return m.Elements
	}
	return nil
}

type ServiceNameMappingCollection struct {
	Elements             []*ServiceNameMappingElement `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ServiceNameMappingCollection) Reset()         { *m = ServiceNameMappingCollection{} }
func (m *ServiceNameMappingCollection) String() string { return proto.CompactTextString(m) }
func (*ServiceNameMappingCollection) ProtoMessage()    {}
func (*ServiceNameMappingCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8030dc5306f709, []int{6}
}

func (m *ServiceNameMappingCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceNameMappingCollection.Unmarshal(m, b)
}
func (m *ServiceNameMappingCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceNameMappingCollection.Marshal(b, m, deterministic)
}
func (m *ServiceNameMappingCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceNameMappingCollection.Merge(m, src)
}
func (m *ServiceNameMappingCollection) XXX_Size() int {
	return xxx_messageInfo_ServiceNameMappingCollection.Size(m)
}
func (m *ServiceNameMappingCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceNameMappingCollection.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceNameMappingCollection proto.InternalMessageInfo

func (m *ServiceNameMappingCollection) GetElements() []*ServiceNameMappingElement {
	if m != nil {
		return m.Elements
	}
	return nil
}

type ServiceNameMappingElement struct {
	ServiceId            int32               `protobuf:"varint,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	Element              *ServiceNameElement `protobuf:"bytes,2,opt,name=element,proto3" json:"element,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ServiceNameMappingElement) Reset()         { *m = ServiceNameMappingElement{} }
func (m *ServiceNameMappingElement) String() string { return proto.CompactTextString(m) }
func (*ServiceNameMappingElement) ProtoMessage()    {}
func (*ServiceNameMappingElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8030dc5306f709, []int{7}
}

func (m *ServiceNameMappingElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceNameMappingElement.Unmarshal(m, b)
}
func (m *ServiceNameMappingElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceNameMappingElement.Marshal(b, m, deterministic)
}
func (m *ServiceNameMappingElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceNameMappingElement.Merge(m, src)
}
func (m *ServiceNameMappingElement) XXX_Size() int {
	return xxx_messageInfo_ServiceNameMappingElement.Size(m)
}
func (m *ServiceNameMappingElement) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceNameMappingElement.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceNameMappingElement proto.InternalMessageInfo

func (m *ServiceNameMappingElement) GetServiceId() int32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

func (m *ServiceNameMappingElement) GetElement() *ServiceNameElement {
	if m != nil {
		return m.Element
	}
	return nil
}

type ServiceNameElement struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ApplicationId        int32    `protobuf:"varint,2,opt,name=applicationId,proto3" json:"applicationId,omitempty"`
	SrcSpanType          SpanType `protobuf:"varint,3,opt,name=srcSpanType,proto3,enum=SpanType" json:"srcSpanType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceNameElement) Reset()         { *m = ServiceNameElement{} }
func (m *ServiceNameElement) String() string { return proto.CompactTextString(m) }
func (*ServiceNameElement) ProtoMessage()    {}
func (*ServiceNameElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8030dc5306f709, []int{8}
}

func (m *ServiceNameElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceNameElement.Unmarshal(m, b)
}
func (m *ServiceNameElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceNameElement.Marshal(b, m, deterministic)
}
func (m *ServiceNameElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceNameElement.Merge(m, src)
}
func (m *ServiceNameElement) XXX_Size() int {
	return xxx_messageInfo_ServiceNameElement.Size(m)
}
func (m *ServiceNameElement) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceNameElement.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceNameElement proto.InternalMessageInfo

func (m *ServiceNameElement) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ServiceNameElement) GetApplicationId() int32 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *ServiceNameElement) GetSrcSpanType() SpanType {
	if m != nil {
		return m.SrcSpanType
	}
	return SpanType_Entry
}

func init() {
	proto.RegisterType((*ApplicationInstance)(nil), "ApplicationInstance")
	proto.RegisterType((*ApplicationInstanceMapping)(nil), "ApplicationInstanceMapping")
	proto.RegisterType((*ApplicationInstanceRecover)(nil), "ApplicationInstanceRecover")
	proto.RegisterType((*ApplicationInstanceHeartbeat)(nil), "ApplicationInstanceHeartbeat")
	proto.RegisterType((*OSInfo)(nil), "OSInfo")
	proto.RegisterType((*ServiceNameCollection)(nil), "ServiceNameCollection")
	proto.RegisterType((*ServiceNameMappingCollection)(nil), "ServiceNameMappingCollection")
	proto.RegisterType((*ServiceNameMappingElement)(nil), "ServiceNameMappingElement")
	proto.RegisterType((*ServiceNameElement)(nil), "ServiceNameElement")
}

func init() { proto.RegisterFile("DiscoveryService.proto", fileDescriptor_7a8030dc5306f709) }

var fileDescriptor_7a8030dc5306f709 = []byte{
	// 528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0x5f, 0x6b, 0xdb, 0x3c,
	0x14, 0xc6, 0xa3, 0xa4, 0x49, 0xeb, 0x93, 0xf6, 0xa5, 0xa8, 0x6d, 0xf0, 0xeb, 0xa6, 0xcc, 0x88,
	0x5e, 0x18, 0xc6, 0x34, 0xc8, 0xca, 0x60, 0x97, 0xa3, 0x19, 0x6b, 0x2e, 0xd6, 0x81, 0xd2, 0xee,
	0x5e, 0x75, 0xd4, 0xc4, 0x10, 0x4b, 0xc2, 0x12, 0xd9, 0xba, 0x6f, 0xb0, 0x2f, 0xd1, 0x6f, 0xb2,
	0xef, 0x36, 0xe2, 0x3f, 0x89, 0x33, 0x3b, 0x61, 0x17, 0xdb, 0xa5, 0x9e, 0x73, 0xfc, 0xf8, 0xd1,
	0xd1, 0x8f, 0x03, 0xbd, 0x61, 0x64, 0x42, 0xb5, 0x10, 0xc9, 0xd3, 0x58, 0x24, 0x8b, 0x28, 0x14,
	0x54, 0x27, 0xca, 0x2a, 0xef, 0xf0, 0x5a, 0xc5, 0xb1, 0x92, 0xf9, 0xe9, 0x78, 0xa8, 0xbe, 0x4a,
	0x63, 0x13, 0xc1, 0xe3, 0x4c, 0x21, 0xcf, 0x08, 0x4e, 0xde, 0x6b, 0x3d, 0x8f, 0x42, 0x6e, 0x23,
	0x25, 0x47, 0xd2, 0x58, 0x2e, 0x43, 0x81, 0x2f, 0xe1, 0x88, 0x97, 0xe4, 0x89, 0x8b, 0x7c, 0x14,
	0xb4, 0xd9, 0xa6, 0x88, 0xfb, 0xe0, 0xf0, 0xa9, 0x90, 0xf6, 0xfe, 0x7e, 0x34, 0x74, 0x9b, 0x3e,
	0x0a, 0x1c, 0xb6, 0x16, 0x30, 0x81, 0xc3, 0x44, 0x4c, 0x23, 0x63, 0x45, 0x72, 0x17, 0xc5, 0xc2,
	0x6d, 0xf9, 0x28, 0x68, 0xb1, 0x0d, 0x0d, 0xbf, 0x80, 0x8e, 0x32, 0x91, 0x7c, 0x54, 0xee, 0x9e,
	0x8f, 0x82, 0xee, 0x60, 0x9f, 0x7e, 0x1e, 0x8f, 0xe4, 0xa3, 0x62, 0xb9, 0x4c, 0xbe, 0x81, 0x57,
	0x93, 0xef, 0x13, 0xd7, 0x3a, 0x92, 0xd3, 0x3f, 0x8c, 0x79, 0x05, 0x67, 0xbc, 0xea, 0x31, 0x9a,
	0xa4, 0x91, 0xdb, 0xac, 0xbe, 0x48, 0x7e, 0xa2, 0xda, 0x5f, 0x33, 0x91, 0xce, 0xf9, 0x5f, 0xfe,
	0xfa, 0xef, 0x4c, 0xee, 0x3b, 0xf4, 0x6b, 0xe2, 0xdf, 0x08, 0x9e, 0xd8, 0x07, 0xc1, 0xed, 0xf6,
	0x68, 0x68, 0x57, 0xb4, 0x4b, 0x38, 0x9a, 0x15, 0x16, 0x69, 0xb6, 0x66, 0x9a, 0x6d, 0x53, 0x24,
	0x1a, 0x3a, 0x59, 0x1a, 0xdc, 0x5b, 0xc6, 0xbc, 0xe5, 0xb1, 0x48, 0x6d, 0x1d, 0x96, 0x9f, 0xb0,
	0x07, 0x07, 0x33, 0x65, 0xac, 0xe4, 0xb9, 0x85, 0xc3, 0x56, 0xe7, 0x25, 0x56, 0x3a, 0x51, 0xa1,
	0x30, 0xe6, 0x56, 0xa5, 0x77, 0x6f, 0xb3, 0xb5, 0x80, 0x4f, 0xa1, 0x1d, 0xe9, 0xc5, 0x95, 0x71,
	0xf7, 0xfc, 0x56, 0xe0, 0xb0, 0xec, 0x40, 0x6e, 0xe0, 0x2c, 0x27, 0x7f, 0x69, 0x7f, 0xad, 0xe6,
	0x73, 0x11, 0x2e, 0xa3, 0xe3, 0xd7, 0x70, 0x20, 0xe6, 0x22, 0x16, 0xd2, 0x1a, 0x17, 0xf9, 0xad,
	0xa0, 0x3b, 0x38, 0xa1, 0xa5, 0xce, 0x0f, 0x59, 0x8d, 0xad, 0x9a, 0xc8, 0x17, 0xe8, 0x97, 0xea,
	0x39, 0x69, 0x25, 0xc3, 0xb7, 0x15, 0x43, 0x8f, 0x56, 0x3f, 0xa8, 0xfa, 0xce, 0xe0, 0xff, 0xad,
	0x6d, 0xcb, 0x2b, 0x9b, 0xac, 0xb8, 0x7a, 0x80, 0xb5, 0x80, 0x5f, 0xc1, 0x7e, 0x6e, 0x93, 0xce,
	0x6a, 0xcb, 0x15, 0x8a, 0x1e, 0xf2, 0x03, 0x01, 0xae, 0xd6, 0xb1, 0x0f, 0x5d, 0xb3, 0x56, 0xf3,
	0xf7, 0x28, 0x4b, 0x55, 0xa6, 0x9b, 0x75, 0x4c, 0xbf, 0x84, 0xae, 0x49, 0xc2, 0xb1, 0xe6, 0xf2,
	0xee, 0x49, 0x67, 0x70, 0xfe, 0x37, 0x70, 0x68, 0x21, 0xb0, 0x72, 0x75, 0xf0, 0x8c, 0xc0, 0x2d,
	0xf0, 0xf9, 0x7d, 0x47, 0xe1, 0x8f, 0x70, 0x5c, 0x30, 0xbd, 0xda, 0x3c, 0xa7, 0xb4, 0x86, 0x5a,
	0xef, 0x9c, 0x6e, 0xdf, 0x02, 0xa4, 0x81, 0xdf, 0x81, 0xb3, 0x02, 0x10, 0x5f, 0xd0, 0x5d, 0xdc,
	0x7b, 0x5d, 0xba, 0xde, 0x82, 0xa4, 0x31, 0x08, 0xe1, 0xbc, 0x34, 0xab, 0x4a, 0xc4, 0x21, 0x38,
	0x93, 0x42, 0xc3, 0x3d, 0x5a, 0xcb, 0x98, 0x77, 0x41, 0x77, 0x11, 0x43, 0x1a, 0x0f, 0x9d, 0x74,
	0xdb, 0xbe, 0xf9, 0x15, 0x00, 0x00, 0xff, 0xff, 0x95, 0x69, 0xdc, 0xcf, 0xa7, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InstanceDiscoveryServiceClient is the client API for InstanceDiscoveryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InstanceDiscoveryServiceClient interface {
	RegisterInstance(ctx context.Context, in *ApplicationInstance, opts ...grpc.CallOption) (*ApplicationInstanceMapping, error)
	Heartbeat(ctx context.Context, in *ApplicationInstanceHeartbeat, opts ...grpc.CallOption) (*Downstream, error)
}

type instanceDiscoveryServiceClient struct {
	cc *grpc.ClientConn
}

func NewInstanceDiscoveryServiceClient(cc *grpc.ClientConn) InstanceDiscoveryServiceClient {
	return &instanceDiscoveryServiceClient{cc}
}

func (c *instanceDiscoveryServiceClient) RegisterInstance(ctx context.Context, in *ApplicationInstance, opts ...grpc.CallOption) (*ApplicationInstanceMapping, error) {
	out := new(ApplicationInstanceMapping)
	err := c.cc.Invoke(ctx, "/InstanceDiscoveryService/registerInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceDiscoveryServiceClient) Heartbeat(ctx context.Context, in *ApplicationInstanceHeartbeat, opts ...grpc.CallOption) (*Downstream, error) {
	out := new(Downstream)
	err := c.cc.Invoke(ctx, "/InstanceDiscoveryService/heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InstanceDiscoveryServiceServer is the server API for InstanceDiscoveryService service.
type InstanceDiscoveryServiceServer interface {
	RegisterInstance(context.Context, *ApplicationInstance) (*ApplicationInstanceMapping, error)
	Heartbeat(context.Context, *ApplicationInstanceHeartbeat) (*Downstream, error)
}

func RegisterInstanceDiscoveryServiceServer(s *grpc.Server, srv InstanceDiscoveryServiceServer) {
	s.RegisterService(&_InstanceDiscoveryService_serviceDesc, srv)
}

func _InstanceDiscoveryService_RegisterInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationInstance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceDiscoveryServiceServer).RegisterInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/InstanceDiscoveryService/RegisterInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceDiscoveryServiceServer).RegisterInstance(ctx, req.(*ApplicationInstance))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstanceDiscoveryService_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationInstanceHeartbeat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceDiscoveryServiceServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/InstanceDiscoveryService/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceDiscoveryServiceServer).Heartbeat(ctx, req.(*ApplicationInstanceHeartbeat))
	}
	return interceptor(ctx, in, info, handler)
}

var _InstanceDiscoveryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "InstanceDiscoveryService",
	HandlerType: (*InstanceDiscoveryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "registerInstance",
			Handler:    _InstanceDiscoveryService_RegisterInstance_Handler,
		},
		{
			MethodName: "heartbeat",
			Handler:    _InstanceDiscoveryService_Heartbeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "DiscoveryService.proto",
}

// ServiceNameDiscoveryServiceClient is the client API for ServiceNameDiscoveryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceNameDiscoveryServiceClient interface {
	Discovery(ctx context.Context, in *ServiceNameCollection, opts ...grpc.CallOption) (*ServiceNameMappingCollection, error)
}

type serviceNameDiscoveryServiceClient struct {
	cc *grpc.ClientConn
}

func NewServiceNameDiscoveryServiceClient(cc *grpc.ClientConn) ServiceNameDiscoveryServiceClient {
	return &serviceNameDiscoveryServiceClient{cc}
}

func (c *serviceNameDiscoveryServiceClient) Discovery(ctx context.Context, in *ServiceNameCollection, opts ...grpc.CallOption) (*ServiceNameMappingCollection, error) {
	out := new(ServiceNameMappingCollection)
	err := c.cc.Invoke(ctx, "/ServiceNameDiscoveryService/discovery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceNameDiscoveryServiceServer is the server API for ServiceNameDiscoveryService service.
type ServiceNameDiscoveryServiceServer interface {
	Discovery(context.Context, *ServiceNameCollection) (*ServiceNameMappingCollection, error)
}

func RegisterServiceNameDiscoveryServiceServer(s *grpc.Server, srv ServiceNameDiscoveryServiceServer) {
	s.RegisterService(&_ServiceNameDiscoveryService_serviceDesc, srv)
}

func _ServiceNameDiscoveryService_Discovery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceNameCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceNameDiscoveryServiceServer).Discovery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServiceNameDiscoveryService/Discovery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceNameDiscoveryServiceServer).Discovery(ctx, req.(*ServiceNameCollection))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceNameDiscoveryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ServiceNameDiscoveryService",
	HandlerType: (*ServiceNameDiscoveryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "discovery",
			Handler:    _ServiceNameDiscoveryService_Discovery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "DiscoveryService.proto",
}
